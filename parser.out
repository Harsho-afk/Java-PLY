Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     return_statement -> RETURN expression SEMICOLON
Rule 4     statement -> variable_declaration
Rule 5     statement -> array_declaration
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> expression EQUALS expression SEMICOLON
Rule 9     statement -> function_declaration
Rule 10    statement -> return_statement
Rule 11    variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON
Rule 12    variable_declaration -> type IDENTIFIER SEMICOLON
Rule 13    array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
Rule 14    array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
Rule 15    array_elements -> expression
Rule 16    array_elements -> array_elements COMMA expression
Rule 17    function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
Rule 18    function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
Rule 19    parameter_list -> type IDENTIFIER
Rule 20    parameter_list -> parameter_list COMMA type IDENTIFIER
Rule 21    type -> INT
Rule 22    type -> FLOAT
Rule 23    type -> BOOLEAN
Rule 24    expression -> NUMBER
Rule 25    expression -> IDENTIFIER
Rule 26    expression -> expression PLUS expression
Rule 27    expression -> expression MINUS expression
Rule 28    expression -> expression MULTIPLY expression
Rule 29    expression -> expression DIVIDE expression
Rule 30    expression -> LPAREN expression RPAREN
Rule 31    expression -> expression GREATER expression
Rule 32    expression -> expression LESS expression
Rule 33    expression -> expression AND expression
Rule 34    expression -> expression OR expression
Rule 35    expression -> expression EQEQ expression
Rule 36    expression -> expression NOTEQ expression
Rule 37    expression -> TRUE
Rule 38    expression -> FALSE
Rule 39    expression -> NOT expression
Rule 40    if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 41    if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 42    while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE

Terminals, with rules where they appear

AND                  : 33
BOOLEAN              : 23
COMMA                : 16 20
DIVIDE               : 29
ELSE                 : 41
EQEQ                 : 35
EQUALS               : 8 11 14
FALSE                : 38
FLOAT                : 22
GREATER              : 31
IDENTIFIER           : 11 12 13 14 17 18 19 20 25
IF                   : 40 41
INT                  : 21
LBRACE               : 14 17 18 40 41 41 42
LESS                 : 32
LPAREN               : 17 18 30 40 41 42
MINUS                : 27
MULTIPLY             : 28
NOT                  : 39
NOTEQ                : 36
NUMBER               : 13 24
OR                   : 34
PLUS                 : 26
RBRACE               : 14 17 18 40 41 41 42
RETURN               : 3
RPAREN               : 17 18 30 40 41 42
SEMICOLON            : 3 8 11 12 13 14
SLBRACE              : 13 14
SRBRACE              : 13 14
TRUE                 : 37
WHILE                : 42
error                : 

Nonterminals, with rules where they appear

array_declaration    : 5
array_elements       : 14 16
expression           : 3 8 8 11 15 16 26 26 27 27 28 28 29 29 30 31 31 32 32 33 33 34 34 35 35 36 36 39 40 41 42
function_declaration : 9
if_statement         : 6
parameter_list       : 17 20
program              : 2 17 18 40 41 41 42 0
return_statement     : 10
statement            : 1 2
type                 : 11 12 13 14 17 18 19 20
variable_declaration : 4
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    program                        shift and go to state 1
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    expression                     shift and go to state 7
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9
    type                           shift and go to state 10

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    statement                      shift and go to state 23
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    expression                     shift and go to state 7
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9
    type                           shift and go to state 10

state 2

    (1) program -> statement .

    IF              reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    NUMBER          reduce using rule 1 (program -> statement .)
    IDENTIFIER      reduce using rule 1 (program -> statement .)
    LPAREN          reduce using rule 1 (program -> statement .)
    TRUE            reduce using rule 1 (program -> statement .)
    FALSE           reduce using rule 1 (program -> statement .)
    NOT             reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    INT             reduce using rule 1 (program -> statement .)
    FLOAT           reduce using rule 1 (program -> statement .)
    BOOLEAN         reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)
    RBRACE          reduce using rule 1 (program -> statement .)


state 3

    (4) statement -> variable_declaration .

    IF              reduce using rule 4 (statement -> variable_declaration .)
    WHILE           reduce using rule 4 (statement -> variable_declaration .)
    NUMBER          reduce using rule 4 (statement -> variable_declaration .)
    IDENTIFIER      reduce using rule 4 (statement -> variable_declaration .)
    LPAREN          reduce using rule 4 (statement -> variable_declaration .)
    TRUE            reduce using rule 4 (statement -> variable_declaration .)
    FALSE           reduce using rule 4 (statement -> variable_declaration .)
    NOT             reduce using rule 4 (statement -> variable_declaration .)
    RETURN          reduce using rule 4 (statement -> variable_declaration .)
    INT             reduce using rule 4 (statement -> variable_declaration .)
    FLOAT           reduce using rule 4 (statement -> variable_declaration .)
    BOOLEAN         reduce using rule 4 (statement -> variable_declaration .)
    $end            reduce using rule 4 (statement -> variable_declaration .)
    RBRACE          reduce using rule 4 (statement -> variable_declaration .)


state 4

    (5) statement -> array_declaration .

    IF              reduce using rule 5 (statement -> array_declaration .)
    WHILE           reduce using rule 5 (statement -> array_declaration .)
    NUMBER          reduce using rule 5 (statement -> array_declaration .)
    IDENTIFIER      reduce using rule 5 (statement -> array_declaration .)
    LPAREN          reduce using rule 5 (statement -> array_declaration .)
    TRUE            reduce using rule 5 (statement -> array_declaration .)
    FALSE           reduce using rule 5 (statement -> array_declaration .)
    NOT             reduce using rule 5 (statement -> array_declaration .)
    RETURN          reduce using rule 5 (statement -> array_declaration .)
    INT             reduce using rule 5 (statement -> array_declaration .)
    FLOAT           reduce using rule 5 (statement -> array_declaration .)
    BOOLEAN         reduce using rule 5 (statement -> array_declaration .)
    $end            reduce using rule 5 (statement -> array_declaration .)
    RBRACE          reduce using rule 5 (statement -> array_declaration .)


state 5

    (6) statement -> if_statement .

    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    NUMBER          reduce using rule 6 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> if_statement .)
    LPAREN          reduce using rule 6 (statement -> if_statement .)
    TRUE            reduce using rule 6 (statement -> if_statement .)
    FALSE           reduce using rule 6 (statement -> if_statement .)
    NOT             reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    INT             reduce using rule 6 (statement -> if_statement .)
    FLOAT           reduce using rule 6 (statement -> if_statement .)
    BOOLEAN         reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 6

    (7) statement -> while_statement .

    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    NUMBER          reduce using rule 7 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 7 (statement -> while_statement .)
    LPAREN          reduce using rule 7 (statement -> while_statement .)
    TRUE            reduce using rule 7 (statement -> while_statement .)
    FALSE           reduce using rule 7 (statement -> while_statement .)
    NOT             reduce using rule 7 (statement -> while_statement .)
    RETURN          reduce using rule 7 (statement -> while_statement .)
    INT             reduce using rule 7 (statement -> while_statement .)
    FLOAT           reduce using rule 7 (statement -> while_statement .)
    BOOLEAN         reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    RBRACE          reduce using rule 7 (statement -> while_statement .)


state 7

    (8) statement -> expression . EQUALS expression SEMICOLON
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    EQUALS          shift and go to state 24
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 8

    (9) statement -> function_declaration .

    IF              reduce using rule 9 (statement -> function_declaration .)
    WHILE           reduce using rule 9 (statement -> function_declaration .)
    NUMBER          reduce using rule 9 (statement -> function_declaration .)
    IDENTIFIER      reduce using rule 9 (statement -> function_declaration .)
    LPAREN          reduce using rule 9 (statement -> function_declaration .)
    TRUE            reduce using rule 9 (statement -> function_declaration .)
    FALSE           reduce using rule 9 (statement -> function_declaration .)
    NOT             reduce using rule 9 (statement -> function_declaration .)
    RETURN          reduce using rule 9 (statement -> function_declaration .)
    INT             reduce using rule 9 (statement -> function_declaration .)
    FLOAT           reduce using rule 9 (statement -> function_declaration .)
    BOOLEAN         reduce using rule 9 (statement -> function_declaration .)
    $end            reduce using rule 9 (statement -> function_declaration .)
    RBRACE          reduce using rule 9 (statement -> function_declaration .)


state 9

    (10) statement -> return_statement .

    IF              reduce using rule 10 (statement -> return_statement .)
    WHILE           reduce using rule 10 (statement -> return_statement .)
    NUMBER          reduce using rule 10 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> return_statement .)
    LPAREN          reduce using rule 10 (statement -> return_statement .)
    TRUE            reduce using rule 10 (statement -> return_statement .)
    FALSE           reduce using rule 10 (statement -> return_statement .)
    NOT             reduce using rule 10 (statement -> return_statement .)
    RETURN          reduce using rule 10 (statement -> return_statement .)
    INT             reduce using rule 10 (statement -> return_statement .)
    FLOAT           reduce using rule 10 (statement -> return_statement .)
    BOOLEAN         reduce using rule 10 (statement -> return_statement .)
    $end            reduce using rule 10 (statement -> return_statement .)
    RBRACE          reduce using rule 10 (statement -> return_statement .)


state 10

    (11) variable_declaration -> type . IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> type . IDENTIFIER SEMICOLON
    (13) array_declaration -> type . IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> type . IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (17) function_declaration -> type . IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> type . IDENTIFIER LPAREN RPAREN LBRACE program RBRACE

    IDENTIFIER      shift and go to state 35


state 11

    (25) expression -> IDENTIFIER .

    EQUALS          reduce using rule 25 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 25 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 25 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 25 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 25 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 25 (expression -> IDENTIFIER .)
    LESS            reduce using rule 25 (expression -> IDENTIFIER .)
    AND             reduce using rule 25 (expression -> IDENTIFIER .)
    OR              reduce using rule 25 (expression -> IDENTIFIER .)
    EQEQ            reduce using rule 25 (expression -> IDENTIFIER .)
    NOTEQ           reduce using rule 25 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 25 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 25 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 25 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 25 (expression -> IDENTIFIER .)


state 12

    (24) expression -> NUMBER .

    EQUALS          reduce using rule 24 (expression -> NUMBER .)
    PLUS            reduce using rule 24 (expression -> NUMBER .)
    MINUS           reduce using rule 24 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 24 (expression -> NUMBER .)
    DIVIDE          reduce using rule 24 (expression -> NUMBER .)
    GREATER         reduce using rule 24 (expression -> NUMBER .)
    LESS            reduce using rule 24 (expression -> NUMBER .)
    AND             reduce using rule 24 (expression -> NUMBER .)
    OR              reduce using rule 24 (expression -> NUMBER .)
    EQEQ            reduce using rule 24 (expression -> NUMBER .)
    NOTEQ           reduce using rule 24 (expression -> NUMBER .)
    RPAREN          reduce using rule 24 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 24 (expression -> NUMBER .)
    RBRACE          reduce using rule 24 (expression -> NUMBER .)
    COMMA           reduce using rule 24 (expression -> NUMBER .)


state 13

    (40) if_statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 36


state 14

    (30) expression -> LPAREN . expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 37

state 15

    (42) while_statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 38


state 16

    (37) expression -> TRUE .

    EQUALS          reduce using rule 37 (expression -> TRUE .)
    PLUS            reduce using rule 37 (expression -> TRUE .)
    MINUS           reduce using rule 37 (expression -> TRUE .)
    MULTIPLY        reduce using rule 37 (expression -> TRUE .)
    DIVIDE          reduce using rule 37 (expression -> TRUE .)
    GREATER         reduce using rule 37 (expression -> TRUE .)
    LESS            reduce using rule 37 (expression -> TRUE .)
    AND             reduce using rule 37 (expression -> TRUE .)
    OR              reduce using rule 37 (expression -> TRUE .)
    EQEQ            reduce using rule 37 (expression -> TRUE .)
    NOTEQ           reduce using rule 37 (expression -> TRUE .)
    RPAREN          reduce using rule 37 (expression -> TRUE .)
    SEMICOLON       reduce using rule 37 (expression -> TRUE .)
    RBRACE          reduce using rule 37 (expression -> TRUE .)
    COMMA           reduce using rule 37 (expression -> TRUE .)


state 17

    (38) expression -> FALSE .

    EQUALS          reduce using rule 38 (expression -> FALSE .)
    PLUS            reduce using rule 38 (expression -> FALSE .)
    MINUS           reduce using rule 38 (expression -> FALSE .)
    MULTIPLY        reduce using rule 38 (expression -> FALSE .)
    DIVIDE          reduce using rule 38 (expression -> FALSE .)
    GREATER         reduce using rule 38 (expression -> FALSE .)
    LESS            reduce using rule 38 (expression -> FALSE .)
    AND             reduce using rule 38 (expression -> FALSE .)
    OR              reduce using rule 38 (expression -> FALSE .)
    EQEQ            reduce using rule 38 (expression -> FALSE .)
    NOTEQ           reduce using rule 38 (expression -> FALSE .)
    RPAREN          reduce using rule 38 (expression -> FALSE .)
    SEMICOLON       reduce using rule 38 (expression -> FALSE .)
    RBRACE          reduce using rule 38 (expression -> FALSE .)
    COMMA           reduce using rule 38 (expression -> FALSE .)


state 18

    (39) expression -> NOT . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 39

state 19

    (3) return_statement -> RETURN . expression SEMICOLON
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 40

state 20

    (21) type -> INT .

    IDENTIFIER      reduce using rule 21 (type -> INT .)


state 21

    (22) type -> FLOAT .

    IDENTIFIER      reduce using rule 22 (type -> FLOAT .)


state 22

    (23) type -> BOOLEAN .

    IDENTIFIER      reduce using rule 23 (type -> BOOLEAN .)


state 23

    (2) program -> program statement .

    IF              reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    NUMBER          reduce using rule 2 (program -> program statement .)
    IDENTIFIER      reduce using rule 2 (program -> program statement .)
    LPAREN          reduce using rule 2 (program -> program statement .)
    TRUE            reduce using rule 2 (program -> program statement .)
    FALSE           reduce using rule 2 (program -> program statement .)
    NOT             reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    INT             reduce using rule 2 (program -> program statement .)
    FLOAT           reduce using rule 2 (program -> program statement .)
    BOOLEAN         reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)
    RBRACE          reduce using rule 2 (program -> program statement .)


state 24

    (8) statement -> expression EQUALS . expression SEMICOLON
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 41

state 25

    (26) expression -> expression PLUS . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 42

state 26

    (27) expression -> expression MINUS . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 43

state 27

    (28) expression -> expression MULTIPLY . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 44

state 28

    (29) expression -> expression DIVIDE . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 45

state 29

    (31) expression -> expression GREATER . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 46

state 30

    (32) expression -> expression LESS . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 47

state 31

    (33) expression -> expression AND . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 48

state 32

    (34) expression -> expression OR . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 49

state 33

    (35) expression -> expression EQEQ . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 50

state 34

    (36) expression -> expression NOTEQ . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 51

state 35

    (11) variable_declaration -> type IDENTIFIER . EQUALS expression SEMICOLON
    (12) variable_declaration -> type IDENTIFIER . SEMICOLON
    (13) array_declaration -> type IDENTIFIER . SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> type IDENTIFIER . SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (17) function_declaration -> type IDENTIFIER . LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> type IDENTIFIER . LPAREN RPAREN LBRACE program RBRACE

    EQUALS          shift and go to state 52
    SEMICOLON       shift and go to state 53
    SLBRACE         shift and go to state 54
    LPAREN          shift and go to state 55


state 36

    (40) if_statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (41) if_statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 56

state 37

    (30) expression -> LPAREN expression . RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    RPAREN          shift and go to state 57
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 38

    (42) while_statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 58

state 39

    (39) expression -> NOT expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 39 (expression -> NOT expression .)
    RPAREN          reduce using rule 39 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 39 (expression -> NOT expression .)
    RBRACE          reduce using rule 39 (expression -> NOT expression .)
    COMMA           reduce using rule 39 (expression -> NOT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 39 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 39 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 39 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 39 (expression -> NOT expression .) ]
  ! EQEQ            [ reduce using rule 39 (expression -> NOT expression .) ]
  ! NOTEQ           [ reduce using rule 39 (expression -> NOT expression .) ]


state 40

    (3) return_statement -> RETURN expression . SEMICOLON
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    SEMICOLON       shift and go to state 59
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 41

    (8) statement -> expression EQUALS expression . SEMICOLON
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    SEMICOLON       shift and go to state 60
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 42

    (26) expression -> expression PLUS expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 26 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 26 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 26 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 26 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! EQEQ            [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! NOTEQ           [ reduce using rule 26 (expression -> expression PLUS expression .) ]


state 43

    (27) expression -> expression MINUS expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 27 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 27 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 27 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 27 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! EQEQ            [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! NOTEQ           [ reduce using rule 27 (expression -> expression MINUS expression .) ]


state 44

    (28) expression -> expression MULTIPLY expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 28 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 28 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 28 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 28 (expression -> expression MULTIPLY expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! GREATER         [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! LESS            [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! EQEQ            [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]
  ! NOTEQ           [ reduce using rule 28 (expression -> expression MULTIPLY expression .) ]


state 45

    (29) expression -> expression DIVIDE expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 29 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 29 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 29 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 29 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! GREATER         [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! LESS            [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! EQEQ            [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! NOTEQ           [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]


state 46

    (31) expression -> expression GREATER expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 31 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 31 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 31 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 31 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! EQEQ            [ reduce using rule 31 (expression -> expression GREATER expression .) ]
  ! NOTEQ           [ reduce using rule 31 (expression -> expression GREATER expression .) ]


state 47

    (32) expression -> expression LESS expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 32 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 32 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 32 (expression -> expression LESS expression .)
    COMMA           reduce using rule 32 (expression -> expression LESS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! EQEQ            [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! NOTEQ           [ reduce using rule 32 (expression -> expression LESS expression .) ]


state 48

    (33) expression -> expression AND expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 33 (expression -> expression AND expression .)
    RPAREN          reduce using rule 33 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression AND expression .)
    RBRACE          reduce using rule 33 (expression -> expression AND expression .)
    COMMA           reduce using rule 33 (expression -> expression AND expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! EQEQ            [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! NOTEQ           [ reduce using rule 33 (expression -> expression AND expression .) ]


state 49

    (34) expression -> expression OR expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 34 (expression -> expression OR expression .)
    RPAREN          reduce using rule 34 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression OR expression .)
    RBRACE          reduce using rule 34 (expression -> expression OR expression .)
    COMMA           reduce using rule 34 (expression -> expression OR expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! EQEQ            [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! NOTEQ           [ reduce using rule 34 (expression -> expression OR expression .) ]


state 50

    (35) expression -> expression EQEQ expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 35 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 35 (expression -> expression EQEQ expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression EQEQ expression .)
    RBRACE          reduce using rule 35 (expression -> expression EQEQ expression .)
    COMMA           reduce using rule 35 (expression -> expression EQEQ expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! GREATER         [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! LESS            [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! AND             [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! OR              [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! EQEQ            [ reduce using rule 35 (expression -> expression EQEQ expression .) ]
  ! NOTEQ           [ reduce using rule 35 (expression -> expression EQEQ expression .) ]


state 51

    (36) expression -> expression NOTEQ expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
    EQUALS          reduce using rule 36 (expression -> expression NOTEQ expression .)
    RPAREN          reduce using rule 36 (expression -> expression NOTEQ expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression NOTEQ expression .)
    RBRACE          reduce using rule 36 (expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 36 (expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34

  ! PLUS            [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! EQEQ            [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]
  ! NOTEQ           [ reduce using rule 36 (expression -> expression NOTEQ expression .) ]


state 52

    (11) variable_declaration -> type IDENTIFIER EQUALS . expression SEMICOLON
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 61

state 53

    (12) variable_declaration -> type IDENTIFIER SEMICOLON .

    IF              reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    TRUE            reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    FALSE           reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    NOT             reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    INT             reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    $end            reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 12 (variable_declaration -> type IDENTIFIER SEMICOLON .)


state 54

    (13) array_declaration -> type IDENTIFIER SLBRACE . NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> type IDENTIFIER SLBRACE . SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON

    NUMBER          shift and go to state 62
    SRBRACE         shift and go to state 63


state 55

    (17) function_declaration -> type IDENTIFIER LPAREN . parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> type IDENTIFIER LPAREN . RPAREN LBRACE program RBRACE
    (19) parameter_list -> . type IDENTIFIER
    (20) parameter_list -> . parameter_list COMMA type IDENTIFIER
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    RPAREN          shift and go to state 66
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    type                           shift and go to state 64
    parameter_list                 shift and go to state 65

state 56

    (40) if_statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (41) if_statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    RPAREN          shift and go to state 67
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 57

    (30) expression -> LPAREN expression RPAREN .

    EQUALS          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 30 (expression -> LPAREN expression RPAREN .)


state 58

    (42) while_statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    RPAREN          shift and go to state 68
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 59

    (3) return_statement -> RETURN expression SEMICOLON .

    IF              reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    BOOLEAN         reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 3 (return_statement -> RETURN expression SEMICOLON .)


state 60

    (8) statement -> expression EQUALS expression SEMICOLON .

    IF              reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    NOT             reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    INT             reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    $end            reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 8 (statement -> expression EQUALS expression SEMICOLON .)


state 61

    (11) variable_declaration -> type IDENTIFIER EQUALS expression . SEMICOLON
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    SEMICOLON       shift and go to state 69
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 62

    (13) array_declaration -> type IDENTIFIER SLBRACE NUMBER . SRBRACE SEMICOLON

    SRBRACE         shift and go to state 70


state 63

    (14) array_declaration -> type IDENTIFIER SLBRACE SRBRACE . EQUALS LBRACE array_elements RBRACE SEMICOLON

    EQUALS          shift and go to state 71


state 64

    (19) parameter_list -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 72


state 65

    (17) function_declaration -> type IDENTIFIER LPAREN parameter_list . RPAREN LBRACE program RBRACE
    (20) parameter_list -> parameter_list . COMMA type IDENTIFIER

    RPAREN          shift and go to state 73
    COMMA           shift and go to state 74


state 66

    (18) function_declaration -> type IDENTIFIER LPAREN RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 75


state 67

    (40) if_statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (41) if_statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 76


state 68

    (42) while_statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 77


state 69

    (11) variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .

    IF              reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    NOT             reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 11 (variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON .)


state 70

    (13) array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE . SEMICOLON

    SEMICOLON       shift and go to state 78


state 71

    (14) array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS . LBRACE array_elements RBRACE SEMICOLON

    LBRACE          shift and go to state 79


state 72

    (19) parameter_list -> type IDENTIFIER .

    RPAREN          reduce using rule 19 (parameter_list -> type IDENTIFIER .)
    COMMA           reduce using rule 19 (parameter_list -> type IDENTIFIER .)


state 73

    (17) function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 80


state 74

    (20) parameter_list -> parameter_list COMMA . type IDENTIFIER
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    type                           shift and go to state 81

state 75

    (18) function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    type                           shift and go to state 10
    program                        shift and go to state 82
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    expression                     shift and go to state 7
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9

state 76

    (40) if_statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (41) if_statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    expression                     shift and go to state 7
    program                        shift and go to state 83
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9
    type                           shift and go to state 10

state 77

    (42) while_statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    expression                     shift and go to state 7
    program                        shift and go to state 84
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9
    type                           shift and go to state 10

state 78

    (13) array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .

    IF              reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    WHILE           reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    NUMBER          reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    LPAREN          reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    TRUE            reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    FALSE           reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    NOT             reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    RETURN          reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    INT             reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    FLOAT           reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    BOOLEAN         reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    $end            reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)
    RBRACE          reduce using rule 13 (array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON .)


state 79

    (14) array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE . array_elements RBRACE SEMICOLON
    (15) array_elements -> . expression
    (16) array_elements -> . array_elements COMMA expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    array_elements                 shift and go to state 85
    expression                     shift and go to state 86

state 80

    (17) function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    type                           shift and go to state 10
    program                        shift and go to state 87
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    expression                     shift and go to state 7
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9

state 81

    (20) parameter_list -> parameter_list COMMA type . IDENTIFIER

    IDENTIFIER      shift and go to state 88


state 82

    (18) function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    RBRACE          shift and go to state 89
    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    type                           shift and go to state 10
    statement                      shift and go to state 23
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    expression                     shift and go to state 7
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9

state 83

    (40) if_statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (41) if_statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (2) program -> program . statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    RBRACE          shift and go to state 90
    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    expression                     shift and go to state 7
    statement                      shift and go to state 23
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9
    type                           shift and go to state 10

state 84

    (42) while_statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    RBRACE          shift and go to state 91
    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    expression                     shift and go to state 7
    statement                      shift and go to state 23
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9
    type                           shift and go to state 10

state 85

    (14) array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements . RBRACE SEMICOLON
    (16) array_elements -> array_elements . COMMA expression

    RBRACE          shift and go to state 92
    COMMA           shift and go to state 93


state 86

    (15) array_elements -> expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    RBRACE          reduce using rule 15 (array_elements -> expression .)
    COMMA           reduce using rule 15 (array_elements -> expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 87

    (17) function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    RBRACE          shift and go to state 94
    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    type                           shift and go to state 10
    statement                      shift and go to state 23
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    expression                     shift and go to state 7
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9

state 88

    (20) parameter_list -> parameter_list COMMA type IDENTIFIER .

    RPAREN          reduce using rule 20 (parameter_list -> parameter_list COMMA type IDENTIFIER .)
    COMMA           reduce using rule 20 (parameter_list -> parameter_list COMMA type IDENTIFIER .)


state 89

    (18) function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .

    IF              reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    NUMBER          reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    IDENTIFIER      reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    TRUE            reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    FALSE           reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    BOOLEAN         reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 18 (function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE .)


state 90

    (40) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (41) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    IF              reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    NUMBER          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IDENTIFIER      reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    TRUE            reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FALSE           reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    BOOLEAN         reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 95


state 91

    (42) while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    IF              reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    NUMBER          reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IDENTIFIER      reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    TRUE            reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FALSE           reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    BOOLEAN         reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 42 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 92

    (14) array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 96


state 93

    (16) array_elements -> array_elements COMMA . expression
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression

    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18

    expression                     shift and go to state 97

state 94

    (17) function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .

    IF              reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    NUMBER          reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    IDENTIFIER      reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    TRUE            reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    FALSE           reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    BOOLEAN         reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 17 (function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE .)


state 95

    (41) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 98


state 96

    (14) array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .

    IF              reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    WHILE           reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    NUMBER          reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    LPAREN          reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    TRUE            reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    FALSE           reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    NOT             reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    RETURN          reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    INT             reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    FLOAT           reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    BOOLEAN         reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    $end            reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)
    RBRACE          reduce using rule 14 (array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON .)


state 97

    (16) array_elements -> array_elements COMMA expression .
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . MULTIPLY expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . GREATER expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . EQEQ expression
    (36) expression -> expression . NOTEQ expression

    RBRACE          reduce using rule 16 (array_elements -> array_elements COMMA expression .)
    COMMA           reduce using rule 16 (array_elements -> array_elements COMMA expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GREATER         shift and go to state 29
    LESS            shift and go to state 30
    AND             shift and go to state 31
    OR              shift and go to state 32
    EQEQ            shift and go to state 33
    NOTEQ           shift and go to state 34


state 98

    (41) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    expression                     shift and go to state 7
    program                        shift and go to state 99
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9
    type                           shift and go to state 10

state 99

    (41) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (2) program -> program . statement
    (4) statement -> . variable_declaration
    (5) statement -> . array_declaration
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . expression EQUALS expression SEMICOLON
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) variable_declaration -> . type IDENTIFIER EQUALS expression SEMICOLON
    (12) variable_declaration -> . type IDENTIFIER SEMICOLON
    (13) array_declaration -> . type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON
    (14) array_declaration -> . type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (42) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (24) expression -> . NUMBER
    (25) expression -> . IDENTIFIER
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression MULTIPLY expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . expression GREATER expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression EQEQ expression
    (36) expression -> . expression NOTEQ expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . NOT expression
    (17) function_declaration -> . type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE
    (18) function_declaration -> . type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE
    (3) return_statement -> . RETURN expression SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . BOOLEAN

    RBRACE          shift and go to state 100
    IF              shift and go to state 13
    WHILE           shift and go to state 15
    NUMBER          shift and go to state 12
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 16
    FALSE           shift and go to state 17
    NOT             shift and go to state 18
    RETURN          shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOLEAN         shift and go to state 22

    expression                     shift and go to state 7
    statement                      shift and go to state 23
    variable_declaration           shift and go to state 3
    array_declaration              shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_declaration           shift and go to state 8
    return_statement               shift and go to state 9
    type                           shift and go to state 10

state 100

    (41) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    IF              reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    NUMBER          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IDENTIFIER      reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    LPAREN          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    TRUE            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FALSE           reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    NOT             reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RETURN          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INT             reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FLOAT           reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    BOOLEAN         reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 39 resolved as shift
WARNING: shift/reduce conflict for LESS in state 39 resolved as shift
WARNING: shift/reduce conflict for AND in state 39 resolved as shift
WARNING: shift/reduce conflict for OR in state 39 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 39 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 42 resolved as shift
WARNING: shift/reduce conflict for LESS in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 42 resolved as shift
WARNING: shift/reduce conflict for OR in state 42 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 42 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 43 resolved as shift
WARNING: shift/reduce conflict for LESS in state 43 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 43 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 44 resolved as shift
WARNING: shift/reduce conflict for LESS in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 44 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 45 resolved as shift
WARNING: shift/reduce conflict for LESS in state 45 resolved as shift
WARNING: shift/reduce conflict for AND in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 45 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS in state 46 resolved as shift
WARNING: shift/reduce conflict for AND in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 47 resolved as shift
WARNING: shift/reduce conflict for LESS in state 47 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 47 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 48 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 49 resolved as shift
WARNING: shift/reduce conflict for LESS in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 49 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 50 resolved as shift
WARNING: shift/reduce conflict for OR in state 50 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 50 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 51 resolved as shift
WARNING: shift/reduce conflict for LESS in state 51 resolved as shift
WARNING: shift/reduce conflict for AND in state 51 resolved as shift
WARNING: shift/reduce conflict for OR in state 51 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 51 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 51 resolved as shift
