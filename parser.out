Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> variable_declaration
Rule 4     statement -> if_statement
Rule 5     statement -> while_statement
Rule 6     variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON
Rule 7     variable_declaration -> INT IDENTIFIER SEMICOLON
Rule 8     variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON
Rule 9     variable_declaration -> FLOAT IDENTIFIER SEMICOLON
Rule 10    variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
Rule 11    variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON
Rule 12    expression -> NUMBER
Rule 13    expression -> IDENTIFIER
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> expression MINUS expression
Rule 16    expression -> expression MULTIPLY expression
Rule 17    expression -> expression DIVIDE expression
Rule 18    expression -> LPAREN expression RPAREN
Rule 19    expression -> expression GREATER expression
Rule 20    expression -> expression LESS expression
Rule 21    expression -> expression AND expression
Rule 22    expression -> expression OR expression
Rule 23    expression -> TRUE
Rule 24    expression -> FALSE
Rule 25    expression -> NOT expression
Rule 26    if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 27    if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 28    while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE

Terminals, with rules where they appear

AND                  : 21
BOOLEAN              : 10 11
DIVIDE               : 17
ELSE                 : 27
EQUALS               : 6 8 10
FALSE                : 24
FLOAT                : 8 9
GREATER              : 19
IDENTIFIER           : 6 7 8 9 10 11 13
IF                   : 26 27
INT                  : 6 7
LBRACE               : 26 27 27 28
LESS                 : 20
LPAREN               : 18 26 27 28
MINUS                : 15
MULTIPLY             : 16
NOT                  : 25
NUMBER               : 12
OR                   : 22
PLUS                 : 14
RBRACE               : 26 27 27 28
RPAREN               : 18 26 27 28
SEMICOLON            : 6 7 8 9 10 11
TRUE                 : 23
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

expression           : 6 8 10 14 14 15 15 16 16 17 17 18 19 19 20 20 21 21 22 22 25 26 27 28
if_statement         : 4
program              : 2 26 27 27 28 0
statement            : 1 2
variable_declaration : 3
while_statement      : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . variable_declaration
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) variable_declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> . INT IDENTIFIER SEMICOLON
    (8) variable_declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . FLOAT IDENTIFIER SEMICOLON
    (10) variable_declaration -> . BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> . BOOLEAN IDENTIFIER SEMICOLON
    (26) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (28) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    BOOLEAN         shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10

    program                        shift and go to state 1
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . variable_declaration
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) variable_declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> . INT IDENTIFIER SEMICOLON
    (8) variable_declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . FLOAT IDENTIFIER SEMICOLON
    (10) variable_declaration -> . BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> . BOOLEAN IDENTIFIER SEMICOLON
    (26) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (28) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    BOOLEAN         shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10

    statement                      shift and go to state 11
    variable_declaration           shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5

state 2

    (1) program -> statement .

    INT             reduce using rule 1 (program -> statement .)
    FLOAT           reduce using rule 1 (program -> statement .)
    BOOLEAN         reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)
    RBRACE          reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> variable_declaration .

    INT             reduce using rule 3 (statement -> variable_declaration .)
    FLOAT           reduce using rule 3 (statement -> variable_declaration .)
    BOOLEAN         reduce using rule 3 (statement -> variable_declaration .)
    IF              reduce using rule 3 (statement -> variable_declaration .)
    WHILE           reduce using rule 3 (statement -> variable_declaration .)
    $end            reduce using rule 3 (statement -> variable_declaration .)
    RBRACE          reduce using rule 3 (statement -> variable_declaration .)


state 4

    (4) statement -> if_statement .

    INT             reduce using rule 4 (statement -> if_statement .)
    FLOAT           reduce using rule 4 (statement -> if_statement .)
    BOOLEAN         reduce using rule 4 (statement -> if_statement .)
    IF              reduce using rule 4 (statement -> if_statement .)
    WHILE           reduce using rule 4 (statement -> if_statement .)
    $end            reduce using rule 4 (statement -> if_statement .)
    RBRACE          reduce using rule 4 (statement -> if_statement .)


state 5

    (5) statement -> while_statement .

    INT             reduce using rule 5 (statement -> while_statement .)
    FLOAT           reduce using rule 5 (statement -> while_statement .)
    BOOLEAN         reduce using rule 5 (statement -> while_statement .)
    IF              reduce using rule 5 (statement -> while_statement .)
    WHILE           reduce using rule 5 (statement -> while_statement .)
    $end            reduce using rule 5 (statement -> while_statement .)
    RBRACE          reduce using rule 5 (statement -> while_statement .)


state 6

    (6) variable_declaration -> INT . IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> INT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 12


state 7

    (8) variable_declaration -> FLOAT . IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> FLOAT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 13


state 8

    (10) variable_declaration -> BOOLEAN . IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> BOOLEAN . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 14


state 9

    (26) if_statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 15


state 10

    (28) while_statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 16


state 11

    (2) program -> program statement .

    INT             reduce using rule 2 (program -> program statement .)
    FLOAT           reduce using rule 2 (program -> program statement .)
    BOOLEAN         reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)
    RBRACE          reduce using rule 2 (program -> program statement .)


state 12

    (6) variable_declaration -> INT IDENTIFIER . EQUALS expression SEMICOLON
    (7) variable_declaration -> INT IDENTIFIER . SEMICOLON

    EQUALS          shift and go to state 17
    SEMICOLON       shift and go to state 18


state 13

    (8) variable_declaration -> FLOAT IDENTIFIER . EQUALS expression SEMICOLON
    (9) variable_declaration -> FLOAT IDENTIFIER . SEMICOLON

    EQUALS          shift and go to state 19
    SEMICOLON       shift and go to state 20


state 14

    (10) variable_declaration -> BOOLEAN IDENTIFIER . EQUALS expression SEMICOLON
    (11) variable_declaration -> BOOLEAN IDENTIFIER . SEMICOLON

    EQUALS          shift and go to state 21
    SEMICOLON       shift and go to state 22


state 15

    (26) if_statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (27) if_statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 24

state 16

    (28) while_statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 30

state 17

    (6) variable_declaration -> INT IDENTIFIER EQUALS . expression SEMICOLON
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 31

state 18

    (7) variable_declaration -> INT IDENTIFIER SEMICOLON .

    INT             reduce using rule 7 (variable_declaration -> INT IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 7 (variable_declaration -> INT IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 7 (variable_declaration -> INT IDENTIFIER SEMICOLON .)
    IF              reduce using rule 7 (variable_declaration -> INT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 7 (variable_declaration -> INT IDENTIFIER SEMICOLON .)
    $end            reduce using rule 7 (variable_declaration -> INT IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 7 (variable_declaration -> INT IDENTIFIER SEMICOLON .)


state 19

    (8) variable_declaration -> FLOAT IDENTIFIER EQUALS . expression SEMICOLON
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 32

state 20

    (9) variable_declaration -> FLOAT IDENTIFIER SEMICOLON .

    INT             reduce using rule 9 (variable_declaration -> FLOAT IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 9 (variable_declaration -> FLOAT IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 9 (variable_declaration -> FLOAT IDENTIFIER SEMICOLON .)
    IF              reduce using rule 9 (variable_declaration -> FLOAT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 9 (variable_declaration -> FLOAT IDENTIFIER SEMICOLON .)
    $end            reduce using rule 9 (variable_declaration -> FLOAT IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 9 (variable_declaration -> FLOAT IDENTIFIER SEMICOLON .)


state 21

    (10) variable_declaration -> BOOLEAN IDENTIFIER EQUALS . expression SEMICOLON
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 33

state 22

    (11) variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON .

    INT             reduce using rule 11 (variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 11 (variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 11 (variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 11 (variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 11 (variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON .)
    $end            reduce using rule 11 (variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 11 (variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON .)


state 23

    (18) expression -> LPAREN . expression RPAREN
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 34

state 24

    (26) if_statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (27) if_statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

    RPAREN          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 25

    (12) expression -> NUMBER .

    RPAREN          reduce using rule 12 (expression -> NUMBER .)
    PLUS            reduce using rule 12 (expression -> NUMBER .)
    MINUS           reduce using rule 12 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 12 (expression -> NUMBER .)
    DIVIDE          reduce using rule 12 (expression -> NUMBER .)
    GREATER         reduce using rule 12 (expression -> NUMBER .)
    LESS            reduce using rule 12 (expression -> NUMBER .)
    AND             reduce using rule 12 (expression -> NUMBER .)
    OR              reduce using rule 12 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 12 (expression -> NUMBER .)


state 26

    (13) expression -> IDENTIFIER .

    RPAREN          reduce using rule 13 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 13 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 13 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 13 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 13 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 13 (expression -> IDENTIFIER .)
    LESS            reduce using rule 13 (expression -> IDENTIFIER .)
    AND             reduce using rule 13 (expression -> IDENTIFIER .)
    OR              reduce using rule 13 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 13 (expression -> IDENTIFIER .)


state 27

    (23) expression -> TRUE .

    RPAREN          reduce using rule 23 (expression -> TRUE .)
    PLUS            reduce using rule 23 (expression -> TRUE .)
    MINUS           reduce using rule 23 (expression -> TRUE .)
    MULTIPLY        reduce using rule 23 (expression -> TRUE .)
    DIVIDE          reduce using rule 23 (expression -> TRUE .)
    GREATER         reduce using rule 23 (expression -> TRUE .)
    LESS            reduce using rule 23 (expression -> TRUE .)
    AND             reduce using rule 23 (expression -> TRUE .)
    OR              reduce using rule 23 (expression -> TRUE .)
    SEMICOLON       reduce using rule 23 (expression -> TRUE .)


state 28

    (24) expression -> FALSE .

    RPAREN          reduce using rule 24 (expression -> FALSE .)
    PLUS            reduce using rule 24 (expression -> FALSE .)
    MINUS           reduce using rule 24 (expression -> FALSE .)
    MULTIPLY        reduce using rule 24 (expression -> FALSE .)
    DIVIDE          reduce using rule 24 (expression -> FALSE .)
    GREATER         reduce using rule 24 (expression -> FALSE .)
    LESS            reduce using rule 24 (expression -> FALSE .)
    AND             reduce using rule 24 (expression -> FALSE .)
    OR              reduce using rule 24 (expression -> FALSE .)
    SEMICOLON       reduce using rule 24 (expression -> FALSE .)


state 29

    (25) expression -> NOT . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 44

state 30

    (28) while_statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

    RPAREN          shift and go to state 45
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 31

    (6) variable_declaration -> INT IDENTIFIER EQUALS expression . SEMICOLON
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

    SEMICOLON       shift and go to state 46
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 32

    (8) variable_declaration -> FLOAT IDENTIFIER EQUALS expression . SEMICOLON
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

    SEMICOLON       shift and go to state 47
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 33

    (10) variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression . SEMICOLON
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

    SEMICOLON       shift and go to state 48
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 34

    (18) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

    RPAREN          shift and go to state 49
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 35

    (26) if_statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (27) if_statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 50


state 36

    (14) expression -> expression PLUS . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 51

state 37

    (15) expression -> expression MINUS . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 52

state 38

    (16) expression -> expression MULTIPLY . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 53

state 39

    (17) expression -> expression DIVIDE . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 54

state 40

    (19) expression -> expression GREATER . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 55

state 41

    (20) expression -> expression LESS . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 56

state 42

    (21) expression -> expression AND . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 57

state 43

    (22) expression -> expression OR . expression
    (12) expression -> . NUMBER
    (13) expression -> . IDENTIFIER
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression MULTIPLY expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression GREATER expression
    (20) expression -> . expression LESS expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . TRUE
    (24) expression -> . FALSE
    (25) expression -> . NOT expression

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29

    expression                     shift and go to state 58

state 44

    (25) expression -> NOT expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 25 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 25 (expression -> NOT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 25 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 25 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 25 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 25 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 25 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 25 (expression -> NOT expression .) ]


state 45

    (28) while_statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 59


state 46

    (6) variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .

    INT             reduce using rule 6 (variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 6 (variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 6 (variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 6 (variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 6 (variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 6 (variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 6 (variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)


state 47

    (8) variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .

    INT             reduce using rule 8 (variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 8 (variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 8 (variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 8 (variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 8 (variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 8 (variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 8 (variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)


state 48

    (10) variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON .

    INT             reduce using rule 10 (variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 10 (variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 10 (variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 10 (variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 10 (variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 10 (variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 10 (variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON .)


state 49

    (18) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 18 (expression -> LPAREN expression RPAREN .)


state 50

    (26) if_statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (27) if_statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . variable_declaration
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) variable_declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> . INT IDENTIFIER SEMICOLON
    (8) variable_declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . FLOAT IDENTIFIER SEMICOLON
    (10) variable_declaration -> . BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> . BOOLEAN IDENTIFIER SEMICOLON
    (26) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (28) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    BOOLEAN         shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10

    program                        shift and go to state 60
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5

state 51

    (14) expression -> expression PLUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 14 (expression -> expression PLUS expression .) ]


state 52

    (15) expression -> expression MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 15 (expression -> expression MINUS expression .) ]


state 53

    (16) expression -> expression MULTIPLY expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 16 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression MULTIPLY expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 16 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 16 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MULTIPLY expression .) ]
  ! GREATER         [ reduce using rule 16 (expression -> expression MULTIPLY expression .) ]
  ! LESS            [ reduce using rule 16 (expression -> expression MULTIPLY expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression MULTIPLY expression .) ]
  ! OR              [ reduce using rule 16 (expression -> expression MULTIPLY expression .) ]


state 54

    (17) expression -> expression DIVIDE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! GREATER         [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! LESS            [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]


state 55

    (19) expression -> expression GREATER expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 19 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 19 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 19 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 19 (expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 19 (expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression GREATER expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression GREATER expression .) ]


state 56

    (20) expression -> expression LESS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 20 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression LESS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 20 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 20 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 20 (expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 20 (expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression LESS expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression LESS expression .) ]


state 57

    (21) expression -> expression AND expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 21 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression AND expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression AND expression .) ]


state 58

    (22) expression -> expression OR expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . MULTIPLY expression
    (17) expression -> expression . DIVIDE expression
    (19) expression -> expression . GREATER expression
    (20) expression -> expression . LESS expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 22 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression OR expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULTIPLY        shift and go to state 38
    DIVIDE          shift and go to state 39
    GREATER         shift and go to state 40
    LESS            shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43

  ! PLUS            [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression OR expression .) ]


state 59

    (28) while_statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . variable_declaration
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) variable_declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> . INT IDENTIFIER SEMICOLON
    (8) variable_declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . FLOAT IDENTIFIER SEMICOLON
    (10) variable_declaration -> . BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> . BOOLEAN IDENTIFIER SEMICOLON
    (26) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (28) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    BOOLEAN         shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10

    program                        shift and go to state 61
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5

state 60

    (26) if_statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (27) if_statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (2) program -> program . statement
    (3) statement -> . variable_declaration
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) variable_declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> . INT IDENTIFIER SEMICOLON
    (8) variable_declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . FLOAT IDENTIFIER SEMICOLON
    (10) variable_declaration -> . BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> . BOOLEAN IDENTIFIER SEMICOLON
    (26) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (28) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE

    RBRACE          shift and go to state 62
    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    BOOLEAN         shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10

    statement                      shift and go to state 11
    variable_declaration           shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5

state 61

    (28) while_statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . variable_declaration
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) variable_declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> . INT IDENTIFIER SEMICOLON
    (8) variable_declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . FLOAT IDENTIFIER SEMICOLON
    (10) variable_declaration -> . BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> . BOOLEAN IDENTIFIER SEMICOLON
    (26) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (28) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE

    RBRACE          shift and go to state 63
    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    BOOLEAN         shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10

    statement                      shift and go to state 11
    variable_declaration           shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5

state 62

    (26) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (27) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    INT             reduce using rule 26 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 26 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    BOOLEAN         reduce using rule 26 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 26 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 26 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 26 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 26 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 64


state 63

    (28) while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    INT             reduce using rule 28 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FLOAT           reduce using rule 28 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    BOOLEAN         reduce using rule 28 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 28 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 28 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 28 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 28 (while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 64

    (27) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 65


state 65

    (27) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . variable_declaration
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) variable_declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> . INT IDENTIFIER SEMICOLON
    (8) variable_declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . FLOAT IDENTIFIER SEMICOLON
    (10) variable_declaration -> . BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> . BOOLEAN IDENTIFIER SEMICOLON
    (26) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (28) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    BOOLEAN         shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10

    program                        shift and go to state 66
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5

state 66

    (27) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . variable_declaration
    (4) statement -> . if_statement
    (5) statement -> . while_statement
    (6) variable_declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (7) variable_declaration -> . INT IDENTIFIER SEMICOLON
    (8) variable_declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . FLOAT IDENTIFIER SEMICOLON
    (10) variable_declaration -> . BOOLEAN IDENTIFIER EQUALS expression SEMICOLON
    (11) variable_declaration -> . BOOLEAN IDENTIFIER SEMICOLON
    (26) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (27) if_statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (28) while_statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE

    RBRACE          shift and go to state 67
    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    BOOLEAN         shift and go to state 8
    IF              shift and go to state 9
    WHILE           shift and go to state 10

    statement                      shift and go to state 11
    variable_declaration           shift and go to state 3
    if_statement                   shift and go to state 4
    while_statement                shift and go to state 5

state 67

    (27) if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    INT             reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FLOAT           reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    BOOLEAN         reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IF              reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 27 (if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 44 resolved as shift
WARNING: shift/reduce conflict for LESS in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 51 resolved as shift
WARNING: shift/reduce conflict for LESS in state 51 resolved as shift
WARNING: shift/reduce conflict for AND in state 51 resolved as shift
WARNING: shift/reduce conflict for OR in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 52 resolved as shift
WARNING: shift/reduce conflict for LESS in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 52 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 53 resolved as shift
WARNING: shift/reduce conflict for LESS in state 53 resolved as shift
WARNING: shift/reduce conflict for AND in state 53 resolved as shift
WARNING: shift/reduce conflict for OR in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 54 resolved as shift
WARNING: shift/reduce conflict for LESS in state 54 resolved as shift
WARNING: shift/reduce conflict for AND in state 54 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 55 resolved as shift
WARNING: shift/reduce conflict for LESS in state 55 resolved as shift
WARNING: shift/reduce conflict for AND in state 55 resolved as shift
WARNING: shift/reduce conflict for OR in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 56 resolved as shift
WARNING: shift/reduce conflict for LESS in state 56 resolved as shift
WARNING: shift/reduce conflict for AND in state 56 resolved as shift
WARNING: shift/reduce conflict for OR in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 57 resolved as shift
WARNING: shift/reduce conflict for LESS in state 57 resolved as shift
WARNING: shift/reduce conflict for AND in state 57 resolved as shift
WARNING: shift/reduce conflict for OR in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 58 resolved as shift
WARNING: shift/reduce conflict for LESS in state 58 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
