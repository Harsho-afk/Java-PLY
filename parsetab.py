
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN COMMA DIVIDE ELSE EQEQ EQUALS FALSE FLOAT GREATER IDENTIFIER IF INT LBRACE LESS LPAREN MINUS MULTIPLY NOT NOTEQ NUMBER OR PLUS RBRACE RETURN RPAREN SEMICOLON SLBRACE SRBRACE TRUE WHILEprogram : statement\n               | program statementreturn_statement : RETURN expression SEMICOLONstatement : variable_declaration\n                 | array_declaration\n                 | if_statement\n                 | while_statement\n                 | expression EQUALS expression SEMICOLON\n                 | function_declaration\n                 | return_statementvariable_declaration : type IDENTIFIER EQUALS expression SEMICOLON\n                            | type IDENTIFIER SEMICOLONarray_declaration : type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON\n                         | type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLONarray_elements : expression\n                      | array_elements COMMA expressionfunction_declaration : type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE\n                            | type IDENTIFIER LPAREN RPAREN LBRACE program RBRACEparameter_list : type IDENTIFIER\n                      | parameter_list COMMA type IDENTIFIERtype : INT\n            | FLOAT\n            | BOOLEANexpression : NUMBER\n                  | IDENTIFIER\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | LPAREN expression RPAREN\n                  | expression GREATER expression\n                  | expression LESS expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression EQEQ expression\n                  | expression NOTEQ expression\n                  | TRUE\n                  | FALSE\n                  | NOT expressionif_statement : IF LPAREN expression RPAREN LBRACE program RBRACE\n                    | IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACEwhile_statement : WHILE LPAREN expression RPAREN LBRACE program RBRACE'
    
_lr_action_items = {'IF':([0,1,2,3,4,5,6,8,9,23,53,59,60,69,75,76,77,78,80,82,83,84,87,89,90,91,94,96,98,99,100,],[13,13,-1,-4,-5,-6,-7,-9,-10,-2,-12,-3,-8,-11,13,13,13,-13,13,13,13,13,13,-18,-40,-42,-17,-14,13,13,-41,]),'WHILE':([0,1,2,3,4,5,6,8,9,23,53,59,60,69,75,76,77,78,80,82,83,84,87,89,90,91,94,96,98,99,100,],[15,15,-1,-4,-5,-6,-7,-9,-10,-2,-12,-3,-8,-11,15,15,15,-13,15,15,15,15,15,-18,-40,-42,-17,-14,15,15,-41,]),'NUMBER':([0,1,2,3,4,5,6,8,9,14,18,19,23,24,25,26,27,28,29,30,31,32,33,34,36,38,52,53,54,59,60,69,75,76,77,78,79,80,82,83,84,87,89,90,91,93,94,96,98,99,100,],[12,12,-1,-4,-5,-6,-7,-9,-10,12,12,12,-2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-12,62,-3,-8,-11,12,12,12,-13,12,12,12,12,12,12,-18,-40,-42,12,-17,-14,12,12,-41,]),'IDENTIFIER':([0,1,2,3,4,5,6,8,9,10,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,38,52,53,59,60,64,69,75,76,77,78,79,80,81,82,83,84,87,89,90,91,93,94,96,98,99,100,],[11,11,-1,-4,-5,-6,-7,-9,-10,35,11,11,11,-21,-22,-23,-2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-12,-3,-8,72,-11,11,11,11,-13,11,11,88,11,11,11,11,-18,-40,-42,11,-17,-14,11,11,-41,]),'LPAREN':([0,1,2,3,4,5,6,8,9,13,14,15,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,52,53,59,60,69,75,76,77,78,79,80,82,83,84,87,89,90,91,93,94,96,98,99,100,],[14,14,-1,-4,-5,-6,-7,-9,-10,36,14,38,14,14,-2,14,14,14,14,14,14,14,14,14,14,14,55,14,14,14,-12,-3,-8,-11,14,14,14,-13,14,14,14,14,14,14,-18,-40,-42,14,-17,-14,14,14,-41,]),'TRUE':([0,1,2,3,4,5,6,8,9,14,18,19,23,24,25,26,27,28,29,30,31,32,33,34,36,38,52,53,59,60,69,75,76,77,78,79,80,82,83,84,87,89,90,91,93,94,96,98,99,100,],[16,16,-1,-4,-5,-6,-7,-9,-10,16,16,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-12,-3,-8,-11,16,16,16,-13,16,16,16,16,16,16,-18,-40,-42,16,-17,-14,16,16,-41,]),'FALSE':([0,1,2,3,4,5,6,8,9,14,18,19,23,24,25,26,27,28,29,30,31,32,33,34,36,38,52,53,59,60,69,75,76,77,78,79,80,82,83,84,87,89,90,91,93,94,96,98,99,100,],[17,17,-1,-4,-5,-6,-7,-9,-10,17,17,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-12,-3,-8,-11,17,17,17,-13,17,17,17,17,17,17,-18,-40,-42,17,-17,-14,17,17,-41,]),'NOT':([0,1,2,3,4,5,6,8,9,14,18,19,23,24,25,26,27,28,29,30,31,32,33,34,36,38,52,53,59,60,69,75,76,77,78,79,80,82,83,84,87,89,90,91,93,94,96,98,99,100,],[18,18,-1,-4,-5,-6,-7,-9,-10,18,18,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-12,-3,-8,-11,18,18,18,-13,18,18,18,18,18,18,-18,-40,-42,18,-17,-14,18,18,-41,]),'RETURN':([0,1,2,3,4,5,6,8,9,23,53,59,60,69,75,76,77,78,80,82,83,84,87,89,90,91,94,96,98,99,100,],[19,19,-1,-4,-5,-6,-7,-9,-10,-2,-12,-3,-8,-11,19,19,19,-13,19,19,19,19,19,-18,-40,-42,-17,-14,19,19,-41,]),'INT':([0,1,2,3,4,5,6,8,9,23,53,55,59,60,69,74,75,76,77,78,80,82,83,84,87,89,90,91,94,96,98,99,100,],[20,20,-1,-4,-5,-6,-7,-9,-10,-2,-12,20,-3,-8,-11,20,20,20,20,-13,20,20,20,20,20,-18,-40,-42,-17,-14,20,20,-41,]),'FLOAT':([0,1,2,3,4,5,6,8,9,23,53,55,59,60,69,74,75,76,77,78,80,82,83,84,87,89,90,91,94,96,98,99,100,],[21,21,-1,-4,-5,-6,-7,-9,-10,-2,-12,21,-3,-8,-11,21,21,21,21,-13,21,21,21,21,21,-18,-40,-42,-17,-14,21,21,-41,]),'BOOLEAN':([0,1,2,3,4,5,6,8,9,23,53,55,59,60,69,74,75,76,77,78,80,82,83,84,87,89,90,91,94,96,98,99,100,],[22,22,-1,-4,-5,-6,-7,-9,-10,-2,-12,22,-3,-8,-11,22,22,22,22,-13,22,22,22,22,22,-18,-40,-42,-17,-14,22,22,-41,]),'$end':([1,2,3,4,5,6,8,9,23,53,59,60,69,78,89,90,91,94,96,100,],[0,-1,-4,-5,-6,-7,-9,-10,-2,-12,-3,-8,-11,-13,-18,-40,-42,-17,-14,-41,]),'RBRACE':([2,3,4,5,6,8,9,11,12,16,17,23,39,42,43,44,45,46,47,48,49,50,51,53,57,59,60,69,78,82,83,84,85,86,87,89,90,91,94,96,97,99,100,],[-1,-4,-5,-6,-7,-9,-10,-25,-24,-37,-38,-2,-39,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-12,-30,-3,-8,-11,-13,89,90,91,92,-15,94,-18,-40,-42,-17,-14,-16,100,-41,]),'EQUALS':([7,11,12,16,17,35,39,42,43,44,45,46,47,48,49,50,51,57,63,],[24,-25,-24,-37,-38,52,-39,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-30,71,]),'PLUS':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[25,-25,-24,-37,-38,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-30,25,25,25,25,]),'MINUS':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[26,-25,-24,-37,-38,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-30,26,26,26,26,]),'MULTIPLY':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[27,-25,-24,-37,-38,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-30,27,27,27,27,]),'DIVIDE':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[28,-25,-24,-37,-38,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-30,28,28,28,28,]),'GREATER':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[29,-25,-24,-37,-38,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-30,29,29,29,29,]),'LESS':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[30,-25,-24,-37,-38,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-30,30,30,30,30,]),'AND':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[31,-25,-24,-37,-38,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-30,31,31,31,31,]),'OR':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[32,-25,-24,-37,-38,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-30,32,32,32,32,]),'EQEQ':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[33,-25,-24,-37,-38,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-30,33,33,33,33,]),'NOTEQ':([7,11,12,16,17,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,61,86,97,],[34,-25,-24,-37,-38,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-30,34,34,34,34,]),'RPAREN':([11,12,16,17,37,39,42,43,44,45,46,47,48,49,50,51,55,56,57,58,65,72,88,],[-25,-24,-37,-38,57,-39,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,66,67,-30,68,73,-19,-20,]),'SEMICOLON':([11,12,16,17,35,39,40,41,42,43,44,45,46,47,48,49,50,51,57,61,70,92,],[-25,-24,-37,-38,53,-39,59,60,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-30,69,78,96,]),'COMMA':([11,12,16,17,39,42,43,44,45,46,47,48,49,50,51,57,65,72,85,86,88,97,],[-25,-24,-37,-38,-39,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-30,74,-19,93,-15,-20,-16,]),'SLBRACE':([35,],[54,]),'SRBRACE':([54,62,],[63,70,]),'LBRACE':([66,67,68,71,73,95,],[75,76,77,79,80,98,]),'ELSE':([90,],[95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,75,76,77,80,98,],[1,82,83,84,87,99,]),'statement':([0,1,75,76,77,80,82,83,84,87,98,99,],[2,23,2,2,2,2,23,23,23,23,2,23,]),'variable_declaration':([0,1,75,76,77,80,82,83,84,87,98,99,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'array_declaration':([0,1,75,76,77,80,82,83,84,87,98,99,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,1,75,76,77,80,82,83,84,87,98,99,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'while_statement':([0,1,75,76,77,80,82,83,84,87,98,99,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([0,1,14,18,19,24,25,26,27,28,29,30,31,32,33,34,36,38,52,75,76,77,79,80,82,83,84,87,93,98,99,],[7,7,37,39,40,41,42,43,44,45,46,47,48,49,50,51,56,58,61,7,7,7,86,7,7,7,7,7,97,7,7,]),'function_declaration':([0,1,75,76,77,80,82,83,84,87,98,99,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'return_statement':([0,1,75,76,77,80,82,83,84,87,98,99,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'type':([0,1,55,74,75,76,77,80,82,83,84,87,98,99,],[10,10,64,81,10,10,10,10,10,10,10,10,10,10,]),'parameter_list':([55,],[65,]),'array_elements':([79,],[85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','parser.py',72),
  ('program -> program statement','program',2,'p_program','parser.py',73),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',78),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',83),
  ('statement -> array_declaration','statement',1,'p_statement','parser.py',84),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',85),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',86),
  ('statement -> expression EQUALS expression SEMICOLON','statement',4,'p_statement','parser.py',87),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',88),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',89),
  ('variable_declaration -> type IDENTIFIER EQUALS expression SEMICOLON','variable_declaration',5,'p_variable_declaration','parser.py',94),
  ('variable_declaration -> type IDENTIFIER SEMICOLON','variable_declaration',3,'p_variable_declaration','parser.py',95),
  ('array_declaration -> type IDENTIFIER SLBRACE NUMBER SRBRACE SEMICOLON','array_declaration',6,'p_array_declaration','parser.py',100),
  ('array_declaration -> type IDENTIFIER SLBRACE SRBRACE EQUALS LBRACE array_elements RBRACE SEMICOLON','array_declaration',9,'p_array_declaration','parser.py',101),
  ('array_elements -> expression','array_elements',1,'p_array_elements','parser.py',106),
  ('array_elements -> array_elements COMMA expression','array_elements',3,'p_array_elements','parser.py',107),
  ('function_declaration -> type IDENTIFIER LPAREN parameter_list RPAREN LBRACE program RBRACE','function_declaration',8,'p_function_declaration','parser.py',112),
  ('function_declaration -> type IDENTIFIER LPAREN RPAREN LBRACE program RBRACE','function_declaration',7,'p_function_declaration','parser.py',113),
  ('parameter_list -> type IDENTIFIER','parameter_list',2,'p_parameter_list','parser.py',118),
  ('parameter_list -> parameter_list COMMA type IDENTIFIER','parameter_list',4,'p_parameter_list','parser.py',119),
  ('type -> INT','type',1,'p_type','parser.py',124),
  ('type -> FLOAT','type',1,'p_type','parser.py',125),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',126),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',131),
  ('expression -> IDENTIFIER','expression',1,'p_expression','parser.py',132),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',133),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',134),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','parser.py',135),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',136),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',137),
  ('expression -> expression GREATER expression','expression',3,'p_expression','parser.py',138),
  ('expression -> expression LESS expression','expression',3,'p_expression','parser.py',139),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',140),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',141),
  ('expression -> expression EQEQ expression','expression',3,'p_expression','parser.py',142),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression','parser.py',143),
  ('expression -> TRUE','expression',1,'p_expression','parser.py',144),
  ('expression -> FALSE','expression',1,'p_expression','parser.py',145),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',146),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE','if_statement',7,'p_if_statement','parser.py',151),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE','if_statement',11,'p_if_statement','parser.py',152),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE','while_statement',7,'p_while_statement','parser.py',157),
]
