
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN DIVIDE ELSE EQUALS FALSE FLOAT GREATER IDENTIFIER IF INT LBRACE LESS LPAREN MINUS MULTIPLY NOT NUMBER OR PLUS RBRACE RPAREN SEMICOLON TRUE WHILEprogram : statement\n               | program statementstatement : variable_declaration\n                 | if_statement\n                 | while_statementvariable_declaration : INT IDENTIFIER EQUALS expression SEMICOLON\n                            | INT IDENTIFIER SEMICOLON\n                            | FLOAT IDENTIFIER EQUALS expression SEMICOLON\n                            | FLOAT IDENTIFIER SEMICOLON\n                            | BOOLEAN IDENTIFIER EQUALS expression SEMICOLON\n                            | BOOLEAN IDENTIFIER SEMICOLONexpression : NUMBER\n                  | IDENTIFIER\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | LPAREN expression RPAREN\n                  | expression GREATER expression\n                  | expression LESS expression\n                  | expression AND expression\n                  | expression OR expression\n                  | TRUE\n                  | FALSE\n                  | NOT expressionif_statement : IF LPAREN expression RPAREN LBRACE program RBRACE\n                    | IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACEwhile_statement : WHILE LPAREN expression RPAREN LBRACE program RBRACE'
    
_lr_action_items = {'INT':([0,1,2,3,4,5,11,18,20,22,46,47,48,50,59,60,61,62,63,65,66,67,],[6,6,-1,-3,-4,-5,-2,-7,-9,-11,-6,-8,-10,6,6,6,6,-26,-28,6,6,-27,]),'FLOAT':([0,1,2,3,4,5,11,18,20,22,46,47,48,50,59,60,61,62,63,65,66,67,],[7,7,-1,-3,-4,-5,-2,-7,-9,-11,-6,-8,-10,7,7,7,7,-26,-28,7,7,-27,]),'BOOLEAN':([0,1,2,3,4,5,11,18,20,22,46,47,48,50,59,60,61,62,63,65,66,67,],[8,8,-1,-3,-4,-5,-2,-7,-9,-11,-6,-8,-10,8,8,8,8,-26,-28,8,8,-27,]),'IF':([0,1,2,3,4,5,11,18,20,22,46,47,48,50,59,60,61,62,63,65,66,67,],[9,9,-1,-3,-4,-5,-2,-7,-9,-11,-6,-8,-10,9,9,9,9,-26,-28,9,9,-27,]),'WHILE':([0,1,2,3,4,5,11,18,20,22,46,47,48,50,59,60,61,62,63,65,66,67,],[10,10,-1,-3,-4,-5,-2,-7,-9,-11,-6,-8,-10,10,10,10,10,-26,-28,10,10,-27,]),'$end':([1,2,3,4,5,11,18,20,22,46,47,48,62,63,67,],[0,-1,-3,-4,-5,-2,-7,-9,-11,-6,-8,-10,-26,-28,-27,]),'RBRACE':([2,3,4,5,11,18,20,22,46,47,48,60,61,62,63,66,67,],[-1,-3,-4,-5,-2,-7,-9,-11,-6,-8,-10,62,63,-26,-28,67,-27,]),'IDENTIFIER':([6,7,8,15,16,17,19,21,23,29,36,37,38,39,40,41,42,43,],[12,13,14,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'LPAREN':([9,10,15,16,17,19,21,23,29,36,37,38,39,40,41,42,43,],[15,16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'EQUALS':([12,13,14,],[17,19,21,]),'SEMICOLON':([12,13,14,25,26,27,28,31,32,33,44,49,51,52,53,54,55,56,57,58,],[18,20,22,-12,-13,-23,-24,46,47,48,-25,-18,-14,-15,-16,-17,-19,-20,-21,-22,]),'NUMBER':([15,16,17,19,21,23,29,36,37,38,39,40,41,42,43,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TRUE':([15,16,17,19,21,23,29,36,37,38,39,40,41,42,43,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FALSE':([15,16,17,19,21,23,29,36,37,38,39,40,41,42,43,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'NOT':([15,16,17,19,21,23,29,36,37,38,39,40,41,42,43,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RPAREN':([24,25,26,27,28,30,34,44,49,51,52,53,54,55,56,57,58,],[35,-12,-13,-23,-24,45,49,-25,-18,-14,-15,-16,-17,-19,-20,-21,-22,]),'PLUS':([24,25,26,27,28,30,31,32,33,34,44,49,51,52,53,54,55,56,57,58,],[36,-12,-13,-23,-24,36,36,36,36,36,36,-18,36,36,36,36,36,36,36,36,]),'MINUS':([24,25,26,27,28,30,31,32,33,34,44,49,51,52,53,54,55,56,57,58,],[37,-12,-13,-23,-24,37,37,37,37,37,37,-18,37,37,37,37,37,37,37,37,]),'MULTIPLY':([24,25,26,27,28,30,31,32,33,34,44,49,51,52,53,54,55,56,57,58,],[38,-12,-13,-23,-24,38,38,38,38,38,38,-18,38,38,38,38,38,38,38,38,]),'DIVIDE':([24,25,26,27,28,30,31,32,33,34,44,49,51,52,53,54,55,56,57,58,],[39,-12,-13,-23,-24,39,39,39,39,39,39,-18,39,39,39,39,39,39,39,39,]),'GREATER':([24,25,26,27,28,30,31,32,33,34,44,49,51,52,53,54,55,56,57,58,],[40,-12,-13,-23,-24,40,40,40,40,40,40,-18,40,40,40,40,40,40,40,40,]),'LESS':([24,25,26,27,28,30,31,32,33,34,44,49,51,52,53,54,55,56,57,58,],[41,-12,-13,-23,-24,41,41,41,41,41,41,-18,41,41,41,41,41,41,41,41,]),'AND':([24,25,26,27,28,30,31,32,33,34,44,49,51,52,53,54,55,56,57,58,],[42,-12,-13,-23,-24,42,42,42,42,42,42,-18,42,42,42,42,42,42,42,42,]),'OR':([24,25,26,27,28,30,31,32,33,34,44,49,51,52,53,54,55,56,57,58,],[43,-12,-13,-23,-24,43,43,43,43,43,43,-18,43,43,43,43,43,43,43,43,]),'LBRACE':([35,45,64,],[50,59,65,]),'ELSE':([62,],[64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,50,59,65,],[1,60,61,66,]),'statement':([0,1,50,59,60,61,65,66,],[2,11,2,2,11,11,2,11,]),'variable_declaration':([0,1,50,59,60,61,65,66,],[3,3,3,3,3,3,3,3,]),'if_statement':([0,1,50,59,60,61,65,66,],[4,4,4,4,4,4,4,4,]),'while_statement':([0,1,50,59,60,61,65,66,],[5,5,5,5,5,5,5,5,]),'expression':([15,16,17,19,21,23,29,36,37,38,39,40,41,42,43,],[24,30,31,32,33,34,44,51,52,53,54,55,56,57,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','parser.py',7),
  ('program -> program statement','program',2,'p_program','parser.py',8),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',13),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',14),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',15),
  ('variable_declaration -> INT IDENTIFIER EQUALS expression SEMICOLON','variable_declaration',5,'p_variable_declaration','parser.py',20),
  ('variable_declaration -> INT IDENTIFIER SEMICOLON','variable_declaration',3,'p_variable_declaration','parser.py',21),
  ('variable_declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON','variable_declaration',5,'p_variable_declaration','parser.py',22),
  ('variable_declaration -> FLOAT IDENTIFIER SEMICOLON','variable_declaration',3,'p_variable_declaration','parser.py',23),
  ('variable_declaration -> BOOLEAN IDENTIFIER EQUALS expression SEMICOLON','variable_declaration',5,'p_variable_declaration','parser.py',24),
  ('variable_declaration -> BOOLEAN IDENTIFIER SEMICOLON','variable_declaration',3,'p_variable_declaration','parser.py',25),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',30),
  ('expression -> IDENTIFIER','expression',1,'p_expression','parser.py',31),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',32),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',33),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','parser.py',34),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',35),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',36),
  ('expression -> expression GREATER expression','expression',3,'p_expression','parser.py',37),
  ('expression -> expression LESS expression','expression',3,'p_expression','parser.py',38),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',39),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',40),
  ('expression -> TRUE','expression',1,'p_expression','parser.py',41),
  ('expression -> FALSE','expression',1,'p_expression','parser.py',42),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',43),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE','if_statement',7,'p_if_statement','parser.py',48),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE','if_statement',11,'p_if_statement','parser.py',49),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE','while_statement',7,'p_while_statement','parser.py',54),
]
